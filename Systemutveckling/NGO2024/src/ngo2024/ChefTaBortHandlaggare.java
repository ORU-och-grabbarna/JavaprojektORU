/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;

/**
 *
 * @author jamie
 */
public class ChefTaBortHandlaggare extends javax.swing.JFrame {
    
    private InfDB idb;
    private String inloggadAnvandare;

    /**
     * Creates new form ChefTaBortHandlaggare
     */
    public ChefTaBortHandlaggare(InfDB idb, String inloggadAnvandare) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        initComponents();
        fyllComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAnstalldasNamn = new javax.swing.JLabel();
        comboNamn = new javax.swing.JComboBox<>();
        txtAnstalldasNamn = new javax.swing.JTextField();
        btnRemovePerson = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAnstalldasNamn.setText("Ta bort handläggare:");

        comboNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNamnActionPerformed(evt);
            }
        });

        btnRemovePerson.setText("OK");
        btnRemovePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAnstalldasNamn)
                        .addGap(18, 18, 18)
                        .addComponent(txtAnstalldasNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemovePerson)
                            .addComponent(comboNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnstalldasNamn)
                    .addComponent(txtAnstalldasNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemovePerson)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void fyllComboBox () {
        
        try {
            
            String sqlHandlaggare = "SELECT anstalld.fornamn " +
                                "FROM anstalld " +
                                "JOIN ans_proj ON anstalld.aid = ans_proj.aid " +
                                "JOIN projekt ON ans_proj.pid = projekt.pid " +
                                "WHERE projekt.projektchef IN (SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvandare + "')";

            
            ArrayList <String > handlaggare = idb.fetchColumn (sqlHandlaggare);
            
            
            if (handlaggare.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog (this, "Inga handläggare hittades.");
                return;
                
            }
            
            for (String namn : handlaggare) {
                comboNamn.addItem(namn);
            }
            
        } catch (InfException e) {
            javax.swing.JOptionPane.showMessageDialog (this, "Fel vid hämtning av handläggare: " + e.getMessage());
        }
    }
    
    
    private void comboNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNamnActionPerformed
        
        String valtNamn = (String) comboNamn.getSelectedItem();
        txtAnstalldasNamn.setText(valtNamn);
    }//GEN-LAST:event_comboNamnActionPerformed

    private void btnRemovePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePersonActionPerformed
        
        try {
            
            String handlaggarNamn = txtAnstalldasNamn.getText().trim();
            
            if (handlaggarNamn.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog (this, "Ange ett namn eller välj ett från listan!");
                return;
            }
            
            String kontrollSql = "Select aid FROM anstalld WHERE fornamn = '" + handlaggarNamn + "'";
            String handlaggarID = idb.fetchSingle(kontrollSql);
            
           if (handlaggarID == null) {
               javax.swing.JOptionPane.showMessageDialog (this, "Ingen handläggare med namnet \"" + handlaggarNamn + "\" hittades.");
               return;
           }
            
           
           String deleteSql = "DELETE FROM ans_proj WHERE aid = '" + handlaggarID + "' " +
                           "AND pid IN (SELECT pid FROM projekt WHERE projektchef IN " +
                           "(SELECT aid FROM anstalld WHERE epost = '" + inloggadAnvandare + "'))";
           idb.delete(deleteSql);
           
           
           javax.swing.JOptionPane.showMessageDialog (this, "Handläggaren \"" + handlaggarNamn + "\" har tagits bort från projektet.");
           
           fyllComboBox();
           
           txtAnstalldasNamn.setText("");
            
            
            
        } catch (InfException e) {
            javax.swing.JOptionPane.showMessageDialog (this, "Fel vid borttagning: " + e.getMessage());
        }
    }//GEN-LAST:event_btnRemovePersonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChefTaBortHandlaggare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChefTaBortHandlaggare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChefTaBortHandlaggare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChefTaBortHandlaggare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ChefTaBortHandlaggare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemovePerson;
    private javax.swing.JComboBox<String> comboNamn;
    private javax.swing.JLabel lblAnstalldasNamn;
    private javax.swing.JTextField txtAnstalldasNamn;
    // End of variables declaration//GEN-END:variables
}
